	public interface I<#=proxyTypeShortName#>
	{
<#if (eventInfos.Any()) {#>
		#region Events
<#	foreach(var eventInfo in eventInfos) {#>
		event <#=writeType(eventInfo.EventHandlerType)#> <#=eventInfo.Name#>;
<#	}#>
		#endregion
<#}#>
<#if (propertyInfos.Any()) {#>
		#region Properties
<#	foreach(var propInfo in propertyInfos) {#>
<#		var indexers = propInfo.GetIndexParameters();#>
<#		if (indexers.Any()) {#>			
		<#=writeUnsafe(propInfo)#><#=writeWrapperType(propInfo.PropertyType)#> <#=String.Format("this[{0}]", String.Join(", ", indexers.Select(i => String.Format("{0} {1}", writeType(i.ParameterType), i.Name))))#>
<#		} else {#> <#=writeUnsafe(propInfo)
#>		<#=writeType(propInfo.PropertyType)#> <#=propInfo.Name#> <#}#>{<#
		if (propInfo.CanRead) {#> get;<#}#><#
			var m = propInfo.GetSetMethod();
		if(m != null && m.IsPublic) {#> set;<#}#> }
<#	}#>
		#endregion
<#}#>

<#if (methodInfos.Any()) {#>
		#region Methods
<#	foreach(var methodInfo in methodInfos) {#>
<#		var args = methodInfo.GetParameters();#>
		<#=writeUnsafe(methodInfo)#><#=writeWrapperType(methodInfo.ReturnParameter.ParameterType)#> <#=methodInfo.Name#>(<#=String.Join(", ", 
			args.Select(a => String.Format("{0} {1}", writeParamType(a), a.Name)))#>);			
<#	}#>
		#endregion
<#}#>
	}
