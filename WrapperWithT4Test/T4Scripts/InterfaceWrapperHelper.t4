/* ---------------------------------------------------------------------------- *
 *		The code is generated by 'T4Wrap' C# proxy generator T4 template		*
 * ---------------------------------------------------------------------------- */

namespace <#=targetProxyNamespace#>
{
	public interface <#=proxyTypeShortName#> <#if (baseClass != null || interfaces.Any()) { #>: <# if (baseClass != null) { #> <#=writeType(baseClass)#>,<#} #> <#=String.Join(", ", interfaces.Select(i => writeType(i)))#> <#}#>

	{
<#if (eventInfos.Any()) {#>
		#region Events
<#	foreach(var eventInfo in eventInfos) {#>
		event <#=writeWrapperType(eventInfo.EventHandlerType)#> <#=eventInfo.Name#>;
<#	}#>
		#endregion
<#}#>
<#if (propertyInfos.Any()) {#>
		#region Properties
<#	foreach(var propInfo in propertyInfos) {#>
<#		var indexers = propInfo.GetIndexParameters();#>
<#		if (indexers.Length > 0) {#>
		<#=writeInterfaceIndexer(propInfo)#>
<#		}	
		else {#>
		<#=writeInterfaceProperty(propInfo)#>
<#		}#>
<#	}#>
		#endregion
<#}#>
<#if (methodInfos.Any()) {#>
		#region Methods
<#	foreach(var methodInfo in methodInfos) {#>
		<#=writeInterfaceMethod(methodInfo)#>
<#	}#>
		#endregion
<#}#>
	}
}

